{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","getMovie","title","fetch","then","response","ok","Error","status","statusText","json","request","FindMovie","addMovie","useState","query","setQuery","currentMovie","setCurrentMovie","inputFieldIsInit","setInputFieldIsInit","isFoundError","setIsFoundError","findMovie","a","searchResult","Response","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","value","onChange","target","onFocus","onBlur","onClick","App","setMovies","newMovie","prev","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bd4a1de8.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\" data-cy=\"card-image\">\n\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movie-title\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[] | [];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => {\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const request = (title: string) => {\n  return fetch(`https://www.omdbapi.com/?apikey=92c0b48e&t=${title}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n};\n\nexport const getMovie = (title: string) => {\n  return request(title);\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport { getMovie } from '../../api/api';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  addMovie: CallableFunction,\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [query, setQuery] = useState('');\n  const [currentMovie, setCurrentMovie] = useState<Movie>();\n  const [inputFieldIsInit, setInputFieldIsInit] = useState(false);\n  const [isFoundError, setIsFoundError] = useState(false);\n\n  const findMovie = async (title: string) => {\n    setInputFieldIsInit(false);\n    setIsFoundError(false);\n\n    const searchResult = await getMovie(title);\n\n    setCurrentMovie(searchResult);\n\n    if (searchResult.Response === 'False') {\n      setInputFieldIsInit(false);\n      setQuery('');\n      setIsFoundError(true);\n\n      return;\n    }\n\n    setQuery('');\n    setIsFoundError(false);\n    setInputFieldIsInit(false);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          findMovie(query);\n        }}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={`\n                input\n                ${inputFieldIsInit && !query ? 'is-danger' : ''}\n              `}\n              value={query}\n              onChange={(event) => {\n                setQuery(event.target.value);\n                setInputFieldIsInit(true);\n                setIsFoundError(false);\n              }}\n              onFocus={() => setIsFoundError(false)}\n              onBlur={() => setInputFieldIsInit(true)}\n            />\n          </div>\n\n          {inputFieldIsInit && !query && (\n            <p className=\"help is-danger\">\n              Enter a movie title\n            </p>\n          )}\n\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              data-cy=\"find\"\n              className=\"button is-light\"\n              onClick={() => {\n                findMovie(query);\n              }}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              data-cy=\"add\"\n              className=\"button is-primary\"\n              onClick={() => {\n                addMovie(currentMovie);\n                setQuery('');\n                setInputFieldIsInit(false);\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        {currentMovie?.Response === 'True' && (\n          <>\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard movie={currentMovie} />\n          </>\n        )}\n\n        {isFoundError && (\n          <h2 className=\"title is-danger\">\n            Movie not found!\n          </h2>\n        )}\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addNewMovie = (newMovie: Movie) => {\n    if (!newMovie\n        || newMovie.Response === 'False') {\n      return;\n    }\n\n    setMovies((prev) => {\n      if (!movies.includes(newMovie)) {\n        return [...prev, newMovie];\n      }\n\n      return prev;\n    });\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          addMovie={addNewMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}